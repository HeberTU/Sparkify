name: Python application

on:
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

env:
  ENV: DEV
  DB_USER_NAME: ${{secrets.DB_USER_NAME}}
  DB_PASS: ${{secrets.DB_PASS}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install  --no-interaction --no-root

    - name: Linting
      run: |
        source .venv/bin/activate
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest -vv
